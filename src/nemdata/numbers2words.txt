https://www.geeksforgeeks.org/convert-number-to-words/
The sample they gave, which is later below, is C, not java

 String single_digits[] = { "zero", "one", "two", "three", "four",
                            "five", "six", "seven", "eight", "nine"};
 String two_digits[] = {"", "ten", "eleven", "twelve", "thirteen", "fourteen",
                        "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"};
 String tens_multiple[] = {"", "", "twenty", "thirty", "forty", "fifty",
                             "sixty", "seventy", "eighty", "ninety"}
 String tens_power[] = {"hundred", "thousand"};

String sayItDecNum( String num ){

 int len = num.length();
 if (len == 0) return "";
 if (len > 4) return "not known";
 if (len == 1) {
   int index = CONVER...num;
   return single_digits[ index ];
 }
 char [] working = num.toCharArray();
 StringBuilder buf = new StringBuilder();
 //Need to add spaces before any but first word?

 String power;
 boolean spaces = false;
 int left = 0;
  //1???-9???
  if (len > 3 ) {
      buf.append( single_digits[working[left]];
      power = tens_power[1];
      buf.append( " " );
      buf.append( power );
      //But update start index
      left = left+1;
      spaces = true;
  }
  //?100-?999
   if (len > 2 ) {
      if (spaces) buf.append( " " );
      buf.append( twodigits[ left ]);
      power = tens_power[0];
      if (spaces) buf.append( " " );
      buf.append( power );
   
      left = left + 1;
      spaces = true;
   }
 /* Code path for last 2 digits--note logic change */ 
  TO-DO  Start here!!! 
  //??10-$??99
   if (len > 1 ) {
      if (spaces) buf.append( " " );
      buf.append( single_digits[working[0]];
      power = tens_power[0];
      if (spaces) buf.append( " " );
      buf.append( power );
      left = left + 1;
      spaces = true;
   }
  
    } else {
      buf.append( single_digits[working[0]];
      String power = tens_power[0];
      buf.append( " ");
      buf.append( power );
                printf("%s ", single_digits[*num - '0']);
                printf("%s ", tens_power[len-3]); // here len can be 3 or 4
  ...
 }
}//End Class sayItDecNum.
 
/* A function that prints given number in words */
void convert_to_words(char *num)
{
    int len = strlen(num);  // Get number of digits in given number

 
    /* Base cases */
    if (len == 0) {
        fprintf(stderr, "empty string\n");
        return;
    }
    if (len > 4) {
        fprintf(stderr, "Length more than 4 is not supported\n");
        return;
    }
 
    /* The first string is not used, it is to make array indexing simple */
    char *single_digits[] = { "zero", "one", "two", "three", "four",
                              "five", "six", "seven", "eight", "nine"};
 
    /* The first string is not used, it is to make array indexing simple */
    char *two_digits[] = {"", "ten", "eleven", "twelve", "thirteen", "fourteen",
                     "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"};
 
    /* The first two string are not used, they are to make array indexing simple*/
    char *tens_multiple[] = {"", "", "twenty", "thirty", "forty", "fifty",
                             "sixty", "seventy", "eighty", "ninety"};
 
    char *tens_power[] = {"hundred", "thousand"};
 
    /* Used for debugging purpose only */
    printf("\n%s: ", num);
 
    /* For single digit number */
    if (len == 1) {
        printf("%s\n", single_digits[*num - '0']);
        return;
    }
 
     /* Iterate while num is not '\0' */
     while (*num != '\0') {
 
        /* Code path for first 2 digits */
        if (len >= 3) {
            if (*num -'0' != 0) {
                printf("%s ", single_digits[*num - '0']);
                printf("%s ", tens_power[len-3]); // here len can be 3 or 4
            }
            --len;
        }
 
        /* Code path for last 2 digits */
        else {
            /* Need to explicitly handle 10-19. Sum of the two digits is
               used as index of "two_digits" array of strings */
            if (*num == '1') {
                int sum = *num - '0' + *(num + 1)- '0';
                printf("%s\n", two_digits[sum]);
                return;
            }
 
            /* Need to explicitely handle 20 */
            else if (*num == '2' && *(num + 1) == '0') {
                printf("twenty\n");
                return;
            }
 
            /* Rest of the two digit numbers i.e., 21 to 99 */
            else {
                int i = *num - '0';
                printf("%s ", i? tens_multiple[i]: "");
                ++num;
                if (*num != '0')
                    printf("%s ", single_digits[*num - '0']);
            }
        }
        ++num;
    }
}